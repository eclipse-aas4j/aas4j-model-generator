#
# Copyright (c) 2022 SAP SE
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

prefix idstt: <https://w3id.org/idsa/transformationtemplates/>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix sh: <http://www.w3.org/ns/shacl#>

template idstt:init-default-fields(?class) {

        IF( BOUND(?defaultValue),
            #then
            CONCAT(
                "\t\tthis.",
                 str(?field),
                  " = ",
                  ucase(substr(?className, 1, 1)),
                  substr(?className, 2),
                  ".",
                  ucase(replace(st:call-template(idstt:to_class_name, ?defaultValue), "([a-z])([A-Z])", CONCAT("$1", "_", "$2"))),
                  " ;"
            ),
            #else
            ""
        )


}
where {
    ?class rdfs:subClassOf* ?superClass .
    OPTIONAL {
        {
            ?property rdfs:domain ?superClass .
            BIND(st:call-template(idstt:to_java_field_name, ?property, ?superClass) as ?field )
        }
        UNION
        {
            ?property rdfs:domain/owl:unionOf/rdf:rest*/rdf:first ?superClass .
            BIND(st:call-template(idstt:to_java_field_name, ?property, ?superClass) as ?field )
        }

        #Note: This block of code below was taken from the "range-to-java-type" template
        OPTIONAL {
            ?property rdfs:range ?range.
            {?property rdfs:domain/^(rdfs:subClassOf*) ?class.} UNION {
            ?property rdfs:domain/owl:unionOf/rdf:rest*/rdf:first/^(rdfs:subClassOf*) ?class.}

            OPTIONAL {
                ?class rdfs:subClassOf* ?superClass .
                ?classShape sh:targetClass ?superClass ;
                    (sh:xone|sh:or)*/rdf:rest*/rdf:first*/sh:property ?propertyShape .
                ?propertyShape sh:path ?property ;
                    sh:defaultValue ?defaultValue .
            }
        }
    }

    BIND(st:call-template(idstt:to_class_name, ?range) as ?className)
}
